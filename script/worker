#!/usr/bin/env ruby
# encoding: utf-8

SELECT_SIZE = 100

require File.expand_path(File.join(File.dirname(__FILE__), '../config/environment.rb'))
require 'buffered_indexer'
require 'journal_encoder'

Thread.current[:carrot] = Carrot.new(:host=>'mediashelf1.dtic.dk')
q = Carrot.queue('search.index')

encoder = JournalEncoder.new
buff = BufferedIndexer.new

trap("SIGINT") { print "Finishing writes..."; buff.flush(true); puts "Done."; exit; }

while msg = q.pop
  list = [msg]
  SELECT_SIZE.times do
    list << q.pop
  end
  l = Metastore.find(list)
  l.each do |m|
    begin
      doc = JournalEncoder.solrize(m.xml)
      buff.add(doc)
    rescue Exception => e
      puts "Caught error, see log"
      logger.error "Error solrizing\n#{e.message}"
      logger.flush
    end
  end
end
buff.flush(true)

Carrot.stop
